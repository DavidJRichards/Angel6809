Name            MECB_ChipSelect_68HC11_CPU;
Partno          CA0001;
Revision        01;
Date            06/2024;
Designer        Greg;
Company         Digicool Things;
Location        None;
Assembly        None;
Device          g16v8as;

/****************************************************************/
/*                                                              */
/* Note: For an ATV16V8 in Simple Mode pins 15 and 16           */
/*  (center macrocells) are permanently configured as           */
/*  combinatorial outputs.                                      */   
/*                                                              */
/****************************************************************/

/*
 * Inputs: Address Inputs were assigned based on the ECB bus pin sequence (for ease of PCB routing).
 * Active low pins are inverted at the pin so all signals can be consistently treated as positive logic.
 *
 */

Pin 1 = !ioaddr;
Pin 2 = clk;
Pin 3 = cpu_phi2o;
Pin 4 = cpu_rw;
Pin 5 = a11;
Pin 6 = a14; 
Pin 7 = a10;
Pin 8 = a12;
Pin 9 = a15;
Pin 11 = a13;

/*
 * Outputs:  define outputs
 * Active low pins are inverted at the pin so all signals can be consistently treated as positive logic.
 *
 */

Pin 12 = !ecb_mreq;
Pin 13 = ecb_clk;
Pin 14 = !cs_rom;
Pin 15 = !cs_ram;
Pin 16 = !cs_spare;
Pin 17 = !ecb_iorq;
Pin 18 = !ecb_rd;
Pin 19 = !ecb_wr;

/*
 *
 * Logic: 6502 CPU Card - Bus Control  
 *
 * ecb_mreq : ioaddr not asserted, while clk high.
 * ecb_iorq : ioaddr asserted, while clk high.
 * ecb_clk : clk
 * ecb_rd : cpu_rw is high, while clk high.
 * ecb_wr : cpu_rw is low, while clk high.
 *
 */

ecb_mreq = !ioaddr & clk;
ecb_iorq =  ioaddr & clk;
ecb_clk = clk;
ecb_rd = cpu_rw & clk;
ecb_wr = !cpu_rw & clk;

/*
 *
 * Logic: 6502 CPU Card - Alternative Bus Control
 * 
 * Remove clk constraint on ecb_mreq, to allow for slower ROM on over-clocked 6502
 * Team with appropriate Chip Select block, which re-introduces clk for RAM Chip Select    
 *
 * ecb_mreq : ioaddr not asserted.
 * ecb_iorq : ioaddr asserted, while clk high.
 * ecb_clk : clk
 * ecb_rd : cpu_rw is high, while clk high.
 * ecb_wr : cpu_rw is low, while clk high.
 *
 */
/*
ecb_mreq = !ioaddr;
ecb_iorq =  ioaddr & clk;

ecb_clk = clk;
ecb_rd = cpu_rw & clk;
ecb_wr = !cpu_rw & clk;
*/

/*
 * Memory Map options follow (un-comment only one!)
 */

cs_rom = ecb_mreq & a15;
cs_ram = ecb_mreq & !a15;

cs_spare = ioaddr;



